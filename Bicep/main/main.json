{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "2677329851077144753"
    }
  },
  "parameters": {
    "rgname": {
      "type": "string",
      "defaultValue": "Techconnect"
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus2"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "dev",
        "Department": "techcon"
      }
    },
    "aisearchname": {
      "type": "string",
      "defaultValue": "gtptchconaisearch"
    },
    "aisearchlocation": {
      "type": "string",
      "defaultValue": "eastus2"
    },
    "sku_name": {
      "type": "string",
      "defaultValue": "standard"
    },
    "disableLocalAuth": {
      "type": "bool",
      "defaultValue": true
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 1
    },
    "replicaCount": {
      "type": "int",
      "defaultValue": 1
    },
    "hostingMode": {
      "type": "string",
      "defaultValue": "default"
    },
    "semanticSearch": {
      "type": "string",
      "defaultValue": "standard"
    },
    "aiservicename": {
      "type": "string",
      "defaultValue": "gtpgenaitchcon"
    },
    "deployments": {
      "type": "array",
      "defaultValue": [
        "text-embedding-ada-002"
      ]
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "gtpgenaidevgrpain"
    },
    "SUBSCRIPTION_ID": {
      "type": "string"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "Techconnectvnet"
    },
    "PrivateEndpointSubnetName": {
      "type": "string",
      "defaultValue": "Devsubnet"
    },
    "PrivateEndpointId": {
      "type": "string",
      "defaultValue": "Devsubnet"
    },
    "DeployResourcesWithPublicAccess": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployWithCustomNetworking": {
      "type": "string",
      "defaultValue": "True"
    },
    "CreatePrivateEndpoints": {
      "type": "string",
      "defaultValue": "True"
    },
    "CreatePrivateEndpointsInSameRgAsResource": {
      "type": "string",
      "defaultValue": "False"
    },
    "UseManualPrivateLinkServiceConnections": {
      "type": "string",
      "defaultValue": "False"
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "gtpgenaidevdefnp"
    },
    "appserviceplan_sku": {
      "type": "string",
      "defaultValue": "ElasticPremium"
    },
    "appserviceplan_skuCode": {
      "type": "string",
      "defaultValue": "EP1"
    },
    "reserved": {
      "type": "bool",
      "defaultValue": true
    },
    "maximumElasticWorkerCount": {
      "type": "int",
      "defaultValue": 1
    },
    "functionWorkerRuntime": {
      "type": "string",
      "defaultValue": "python"
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "gtpgenaitcdefnans"
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "gtpgenaidevdefnp"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "gtpgenaitchconstor"
    },
    "functionApplinuxFxVersion": {
      "type": "string",
      "defaultValue": "python|3.11"
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.4.0/23"
    },
    "FunctionAppSubnetName": {
      "type": "string",
      "defaultValue": "FunctionAppSubnet"
    },
    "apiManagementSubnetName": {
      "type": "string",
      "defaultValue": "ApiManagementSubnet"
    },
    "azurePAASResourcesSubnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.4.240/28"
    },
    "logicAppSubnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.4.192/28"
    },
    "functionAppSubnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.4.176/28"
    },
    "apiManagementSubnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.4.144/28"
    },
    "DeployDataLake": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployLandingStorage": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployKeyVault": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployMLWorkspace": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployCognitiveService": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployAzureSearch": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployAPIManagement": {
      "type": "string",
      "defaultValue": "True"
    },
    "DeployAzureOpenAI": {
      "type": "string",
      "defaultValue": "True"
    },
    "sku": {
      "type": "string",
      "defaultValue": "standard"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "gtpgenaitchckvns"
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": true
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": true
    },
    "softDeleteRetentionInDays": {
      "type": "int",
      "defaultValue": 90
    },
    "DeployPurgeProtection": {
      "type": "string",
      "defaultValue": "False"
    },
    "enablePurgeProtection": {
      "type": "bool",
      "defaultValue": "[if(equals(parameters('DeployPurgeProtection'), 'True'), true(), false())]"
    },
    "DeployLogAnalytics": {
      "type": "string",
      "defaultValue": "True"
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "gtpgenailogtechcon"
    },
    "publicNetworkAccessForIngestion": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ],
      "metadata": {
        "description": "Public Network Access for Ingestion"
      }
    },
    "publicNetworkAccessForQuery": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ],
      "metadata": {
        "description": "Public Network Access for Query"
      }
    },
    "log_sku_name": {
      "type": "string",
      "defaultValue": "PerGB2018"
    },
    "retentionInDays": {
      "type": "int",
      "defaultValue": 90
    },
    "dailyQuotaGb": {
      "type": "int",
      "defaultValue": -1
    },
    "enableDataExport": {
      "type": "bool",
      "defaultValue": true
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_ZRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ]
    },
    "accessTier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ]
    },
    "containerName": {
      "type": "string",
      "defaultValue": "gtpgenaistortechcont"
    },
    "requireInfrastructureEncryption": {
      "type": "bool",
      "defaultValue": true
    },
    "softDeleteEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "rg-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('rgname')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13217484020288192637"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('name')]",
              "location": "eastus2",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnetDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressSpace": {
            "value": "[parameters('vnetAddressSpace')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "15262668100475893706"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetAddressSpace": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-01-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressSpace')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": []
                },
                "subnets": [],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'rg-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "subnetDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "FunctionAppSubnetName": {
            "value": "[parameters('FunctionAppSubnetName')]"
          },
          "ApiManagementSubnetName": {
            "value": "[parameters('apiManagementSubnetName')]"
          },
          "azurePAASResourcesSubnetAddressSpace": {
            "value": "[parameters('azurePAASResourcesSubnetAddressSpace')]"
          },
          "logicAppSubnetAddressSpace": {
            "value": "[parameters('logicAppSubnetAddressSpace')]"
          },
          "functionAppSubnetAddressSpace": {
            "value": "[parameters('functionAppSubnetAddressSpace')]"
          },
          "apiManagementSubnetAddressSpace": {
            "value": "[parameters('apiManagementSubnetAddressSpace')]"
          },
          "DeployMLWorkspace": {
            "value": "[parameters('DeployMLWorkspace')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17021136088933759192"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vnetName": {
              "type": "string"
            },
            "DeployMLWorkspace": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployApiManagement": {
              "type": "string",
              "defaultValue": "False"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "LogicAppSubnetName": {
              "type": "string",
              "defaultValue": "LogicAppSubnet"
            },
            "FunctionAppSubnetName": {
              "type": "string",
              "defaultValue": "FunctionAppSubnet"
            },
            "ApiManagementSubnetName": {
              "type": "string",
              "defaultValue": "ApiManagementSubnet"
            },
            "azurePAASResourcesSubnetAddressSpace": {
              "type": "string"
            },
            "logicAppSubnetAddressSpace": {
              "type": "string",
              "defaultValue": ""
            },
            "functionAppSubnetAddressSpace": {
              "type": "string",
              "defaultValue": ""
            },
            "apiManagementSubnetAddressSpace": {
              "type": "string",
              "defaultValue": ""
            },
            "apimSubnetServiceEndpoints": {
              "type": "array",
              "defaultValue": [
                {
                  "service": "Microsoft.Storage"
                },
                {
                  "service": "Microsoft.Sql"
                },
                {
                  "service": "Microsoft.EventHub"
                },
                {
                  "service": "Microsoft.KeyVault"
                }
              ],
              "metadata": {
                "description": "Service endpoints enabled on the API Management subnet"
              }
            }
          },
          "variables": {
            "DeployLogicApp": "[if(empty(parameters('logicAppSubnetAddressSpace')), 'False', 'True')]",
            "DeployFunctionApp": "[if(empty(parameters('functionAppSubnetAddressSpace')), 'False', 'True')]",
            "DefaultNsgRules": [],
            "nsgMLStudioSubnetNsgRules": [
              {
                "name": "AllowInbound_BatchNodeManagement_29877",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "29877",
                  "sourceAddressPrefix": "BatchNodeManagement",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "access": "Allow",
                  "priority": 201,
                  "direction": "Inbound"
                }
              },
              {
                "name": "AllowInbound_BatchNodeManagement_29876",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "29876",
                  "sourceAddressPrefix": "BatchNodeManagement",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "access": "Allow",
                  "priority": 210,
                  "direction": "Inbound"
                }
              },
              {
                "name": "AllowInbound_AzureMachineLearning_44224",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "44224",
                  "sourceAddressPrefix": "AzureMachineLearning",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "access": "Allow",
                  "priority": 220,
                  "direction": "Inbound"
                }
              },
              {
                "name": "AllowOutbound_AzureActiveDirectory",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "80",
                    "443"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureActiveDirectory",
                  "access": "Allow",
                  "priority": 140,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureMachineLearning",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "443",
                    "8787",
                    "18881"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureMachineLearning",
                  "access": "Allow",
                  "priority": 150,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureMachineLearning_Udp",
                "properties": {
                  "protocol": "UDP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "5831"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureMachineLearning",
                  "access": "Allow",
                  "priority": 151,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_BatchNodeManagement",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "443"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "BatchNodeManagement",
                  "access": "Allow",
                  "priority": 152,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureResourceManager",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureResourceManager",
                  "access": "Allow",
                  "priority": 160,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_Storage",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "443",
                    "445"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "Storage",
                  "access": "Allow",
                  "priority": 170,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureFrontDoor_FrontEnd",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureFrontDoor.Frontend",
                  "access": "Allow",
                  "priority": 180,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_MicrosoftContainerRegistry",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "MicrosoftContainerRegistry",
                  "access": "Allow",
                  "priority": 190,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureMonitor",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureMonitor",
                  "access": "Allow",
                  "priority": 200,
                  "direction": "Outbound"
                }
              }
            ],
            "PaasResourcesNsgRuleswithSynapse": [
              {
                "name": "AllowOutbound_AzureActiveDirectory",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRanges": [
                    "80",
                    "443"
                  ],
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureActiveDirectory",
                  "access": "Allow",
                  "priority": 140,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureResourceManager",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureResourceManager",
                  "access": "Allow",
                  "priority": 160,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureFrontDoor_FrontEnd",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureFrontDoor.Frontend",
                  "access": "Allow",
                  "priority": 180,
                  "direction": "Outbound"
                }
              },
              {
                "name": "AllowOutbound_AzureMonitor",
                "properties": {
                  "protocol": "TCP",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "destinationAddressPrefix": "AzureMonitor",
                  "access": "Allow",
                  "priority": 200,
                  "direction": "Outbound"
                }
              }
            ]
          },
          "resources": [
            {
              "condition": "[equals(variables('DeployLogicApp'), 'True')]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-{1}-NSG', parameters('vnetName'), parameters('LogicAppSubnetName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Dependency_on_Azure_Storage",
                    "properties": {
                      "description": "Dependency on Azure blob storage",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Storage_SMB",
                    "properties": {
                      "description": "Dependency on Azure blob storage SMB",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_LogicApps",
                    "properties": {
                      "description": "Dependency on Azure Logic Apps",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "LogicApps",
                      "access": "Allow",
                      "priority": 1002,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Connectors",
                    "properties": {
                      "description": "Dependency on Azure Connectors",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureConnectors",
                      "access": "Allow",
                      "priority": 1003,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "condition": "[equals(variables('DeployFunctionApp'), 'True')]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-{1}-NSG', parameters('vnetName'), parameters('FunctionAppSubnetName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-{1}-NSG', parameters('vnetName'), parameters('PrivateEndpointSubnetName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[if(equals(parameters('DeployMLWorkspace'), 'True'), concat(variables('DefaultNsgRules'), variables('nsgMLStudioSubnetNsgRules')), concat(variables('DefaultNsgRules'), variables('PaasResourcesNsgRuleswithSynapse')))]"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('PrivateEndpointSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('azurePAASResourcesSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('PrivateEndpointSubnetName')))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('PrivateEndpointSubnetName')))]"
              ]
            },
            {
              "condition": "[equals(variables('DeployLogicApp'), 'True')]",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('LogicAppSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('logicAppSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('LogicAppSubnetName')))]"
                },
                "delegations": [
                  {
                    "name": "delegation",
                    "id": "[format('{0}/subnets/{1}/delegations/delegation', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('LogicAppSubnetName'))]",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverfarms"
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                  }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('PrivateEndpointSubnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('LogicAppSubnetName')))]"
              ]
            },
            {
              "condition": "[equals(variables('DeployFunctionApp'), 'True')]",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('FunctionAppSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('functionAppSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('FunctionAppSubnetName')))]"
                },
                "delegations": [
                  {
                    "name": "delegation",
                    "id": "[format('{0}/subnets/{1}/delegations/delegation', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('FunctionAppSubnetName'))]",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverfarms"
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                  }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('LogicAppSubnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('FunctionAppSubnetName')))]"
              ]
            },
            {
              "condition": "[equals(parameters('DeployApiManagement'), 'True')]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}-{1}-NSG', parameters('vnetName'), parameters('ApiManagementSubnetName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Management_endpoint_for_Azure_portal_and_Powershell",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Redis_Cache",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6381-6383",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Dependency_to_sync_Rate_Limit_Inbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4290",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 135,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_SQL",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Sql",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_for_Log_to_event_Hub_policy",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5671",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "EventHub",
                      "access": "Allow",
                      "priority": 150,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Redis_Cache_outbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6381-6383",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 160,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_To_sync_RateLimit_Outbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4290",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 165,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_File_Share_for_GIT",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 170,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Azure_Infrastructure_Load_Balancer",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6390",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 180,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Publish_DiagnosticLogs_And_Metrics",
                    "properties": {
                      "description": "API Management logs and metrics for consumption by admins and your IT team are all part of the management plane",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureMonitor",
                      "access": "Allow",
                      "priority": 185,
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "443",
                        "12000",
                        "1886"
                      ]
                    }
                  },
                  {
                    "name": "Connect_To_SMTP_Relay_For_SendingEmails",
                    "properties": {
                      "description": "APIM features the ability to generate email traffic as part of the data plane and the management plane",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 190,
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "25",
                        "587",
                        "25028"
                      ]
                    }
                  },
                  {
                    "name": "Authenticate_To_Azure_Active_Directory",
                    "properties": {
                      "description": "Connect to Azure Active Directory for developer portal authentication or for OAuth 2 flow during any proxy authentication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureActiveDirectory",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Storage",
                    "properties": {
                      "description": "APIM service dependency on Azure blob and Azure table storage",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Publish_Monitoring_Logs",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 300,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_KeyVault",
                    "properties": {
                      "description": "Allow API Management service control plane access to Azure Key Vault to refresh secrets",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureKeyVault",
                      "access": "Allow",
                      "priority": 350,
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "Deny_All_Internet_Outbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Internet",
                      "access": "Deny",
                      "priority": 999,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "condition": "[equals(parameters('DeployApiManagement'), 'True')]",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('ApiManagementSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('apiManagementSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('ApiManagementSubnetName')))]"
                },
                "serviceEndpoints": "[parameters('apimSubnetServiceEndpoints')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('FunctionAppSubnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-NSG', parameters('vnetName'), parameters('ApiManagementSubnetName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalyticsDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "publicNetworkAccessForIngestion": {
            "value": "[parameters('publicNetworkAccessForIngestion')]"
          },
          "publicNetworkAccessForQuery": {
            "value": "[parameters('publicNetworkAccessForQuery')]"
          },
          "sku_name": {
            "value": "[parameters('log_sku_name')]"
          },
          "disableLocalAuth": {
            "value": "[parameters('disableLocalAuth')]"
          },
          "enableDataExport": {
            "value": "[parameters('enableDataExport')]"
          },
          "retentionInDays": {
            "value": "[parameters('retentionInDays')]"
          },
          "dailyQuotaGb": {
            "value": "[parameters('dailyQuotaGb')]"
          },
          "DeployResourcesWithPublicAccess": {
            "value": "[parameters('DeployResourcesWithPublicAccess')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8101948204378719960"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "publicNetworkAccessForIngestion": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ]
            },
            "publicNetworkAccessForQuery": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ]
            },
            "sku_name": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "allowedValues": [
                "Free",
                "PerGB2018",
                "PerNode",
                "Premium",
                "Standalone",
                "Standard"
              ]
            },
            "disableLocalAuth": {
              "type": "bool",
              "defaultValue": false
            },
            "enableDataExport": {
              "type": "bool",
              "defaultValue": true
            },
            "enableLogAccessUsingOnlyResourcePermissions": {
              "type": "bool",
              "defaultValue": false
            },
            "immediatePurgeDataOn30Days": {
              "type": "bool",
              "defaultValue": false
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 90
            },
            "dailyQuotaGb": {
              "type": "int",
              "defaultValue": -1
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            }
          },
          "variables": {
            "publicNetworkAccessForIngestion_variable": "[if(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), 'Enabled', parameters('publicNetworkAccessForIngestion'))]",
            "publicNetworkAccessForQuery_variable": "[if(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), 'Enabled', parameters('publicNetworkAccessForQuery'))]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "features": {
                  "disableLocalAuth": "[parameters('disableLocalAuth')]",
                  "enableDataExport": "[parameters('enableDataExport')]",
                  "enableLogAccessUsingOnlyResourcePermissions": "[parameters('enableLogAccessUsingOnlyResourcePermissions')]",
                  "immediatePurgeDataOn30Days": "[parameters('immediatePurgeDataOn30Days')]"
                },
                "publicNetworkAccessForIngestion": "[variables('publicNetworkAccessForIngestion_variable')]",
                "publicNetworkAccessForQuery": "[variables('publicNetworkAccessForQuery_variable')]",
                "retentionInDays": "[parameters('retentionInDays')]",
                "sku": {
                  "name": "[parameters('sku_name')]"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('dailyQuotaGb')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'subnetDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultModule",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "enabledForTemplateDeployment": {
            "value": "[parameters('enabledForTemplateDeployment')]"
          },
          "enabledForDiskEncryption": {
            "value": "[parameters('enabledForDiskEncryption')]"
          },
          "enabledForDeployment": {
            "value": "[parameters('enabledForDeployment')]"
          },
          "softDeleteRetentionInDays": {
            "value": "[parameters('softDeleteRetentionInDays')]"
          },
          "enableDiagnostics": {
            "value": "[parameters('enableDiagnostics')]"
          },
          "DeployLogAnalytics": {
            "value": "[parameters('DeployLogAnalytics')]"
          },
          "logAnalyticsSubscriptionId": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "logAnalyticsRG": {
            "value": "[parameters('rgname')]"
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "DeployPurgeProtection": {
            "value": "[parameters('DeployPurgeProtection')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "enablePurgeProtection": {
            "value": "[parameters('enablePurgeProtection')]"
          },
          "DeployResourcesWithPublicAccess": {
            "value": "[parameters('DeployResourcesWithPublicAccess')]"
          },
          "DeployWithCustomNetworking": {
            "value": "[parameters('DeployWithCustomNetworking')]"
          },
          "CreatePrivateEndpoints": {
            "value": "[parameters('CreatePrivateEndpoints')]"
          },
          "CreatePrivateEndpointsInSameRgAsResource": {
            "value": "[parameters('CreatePrivateEndpointsInSameRgAsResource')]"
          },
          "UseManualPrivateLinkServiceConnections": {
            "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "PrivateEndpointId": {
            "value": "[parameters('PrivateEndpointId')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2035250457601389703"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyVaultName": {
              "type": "string"
            },
            "enabledForTemplateDeployment": {
              "type": "bool"
            },
            "enabledForDiskEncryption": {
              "type": "bool"
            },
            "enabledForDeployment": {
              "type": "bool"
            },
            "softDeleteRetentionInDays": {
              "type": "int"
            },
            "enableDiagnostics": {
              "type": "bool"
            },
            "DeployLogAnalytics": {
              "type": "string"
            },
            "logAnalyticsSubscriptionId": {
              "type": "string"
            },
            "logAnalyticsRG": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "DeployPurgeProtection": {
              "type": "string",
              "defaultValue": "False"
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "premium",
                "standard"
              ]
            },
            "enablePurgeProtection": {
              "type": "bool",
              "defaultValue": "[if(equals(parameters('DeployPurgeProtection'), 'True'), true(), false())]"
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            },
            "AllowAccessToIpRange": {
              "type": "string",
              "defaultValue": "False"
            },
            "IpRangeCidr": {
              "type": "string",
              "defaultValue": ""
            },
            "DeployWithCustomNetworking": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpoints": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpointsInSameRgAsResource": {
              "type": "string",
              "defaultValue": "False"
            },
            "UseManualPrivateLinkServiceConnections": {
              "type": "string",
              "defaultValue": "False"
            },
            "rgname": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "PrivateEndpointId": {
              "type": "string"
            },
            "SUBSCRIPTION_ID": {
              "type": "securestring"
            }
          },
          "variables": {
            "ipRangeFilter": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('AllowAccessToIpRange'), 'True')), true(), false())]",
            "publicNetworkAccess": "[if(or(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), variables('ipRangeFilter')), 'Enabled', 'Disabled')]",
            "defaultAction": "[if(and(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), equals(variables('ipRangeFilter'), false())), 'Allow', 'Deny')]",
            "vnetIntegration": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('CreatePrivateEndpoints'), 'True')), true(), false())]",
            "privateEndpointRg": "[if(equals(parameters('CreatePrivateEndpointsInSameRgAsResource'), 'True'), resourceGroup().name, parameters('rgname'))]",
            "privateDnsZoneName": "privatelink.vaultcore.azure.net"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enablePurgeProtection": "[if(parameters('enablePurgeProtection'), true(), null())]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "networkAcls": {
                  "defaultAction": "[variables('defaultAction')]",
                  "ipRules": "[if(equals(variables('ipRangeFilter'), false()), null(), createArray(createObject('value', parameters('IpRangeCidr'))))]"
                },
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('sku')]"
                },
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "tenantId": "[tenant().tenantId]"
              }
            },
            {
              "condition": "[and(parameters('enableDiagnostics'), equals(parameters('DeployLogAnalytics'), 'True'))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "kv-diagnostic-loganalytics",
              "properties": {
                "workspaceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsRG')), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "condition": "[variables('vnetIntegration')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyvault_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('privateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('privateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "vault"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'dns-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dnsZonesModule",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "96928661562439718"
            }
          },
          "parameters": {
            "SUBSCRIPTION_ID": {
              "type": "string"
            },
            "rgname": {
              "type": "string"
            }
          },
          "variables": {
            "blobprivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
            "dfsprivateDnsZoneName": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
            "fileprivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
            "queueprivateDnsZoneName": "[format('privatelink.queue.{0}', environment().suffixes.storage)]",
            "tableprivateDnsZoneName": "[format('privatelink.table.{0}', environment().suffixes.storage)]",
            "sqlPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.sqlServerHostname)]",
            "cognitiveServicePrivateDnsZoneName": "privatelink.cognitiveservices.azure.com",
            "openAIPrivateDnsZoneName": "privatelink.openai.azure.com",
            "adfPortalPrivateDnsZoneName": "privatelink.adf.azure.com",
            "adfPrivateDnsZoneName": "privatelink.datafactory.azure.net",
            "keyVaultPrivateDnsZoneName": "privatelink.vaultcore.azure.net",
            "azureWebsitesPrivateDnsZoneName": "privatelink.azurewebsites.net",
            "containerRegistryPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
            "mlWorkspaceprivateDnsZoneName1": "privatelink.api.azureml.ms",
            "mlWorkspaceprivateDnsZoneName2": "privatelink.notebooks.azure.net",
            "searchDnsZoneName": "privatelink.search.windows.net",
            "apiManagementDnsZoneName": "privatelink.azure-api.net"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "blob_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('blobprivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dfs_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('dfsprivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "file_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('fileprivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "queue_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('queueprivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "table_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('tableprivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "sql_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('sqlPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cognitive_service_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('cognitiveServicePrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai_service_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('openAIPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "data_factory_portal_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('adfPortalPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "data_factory_dataFactory_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('adfPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "key_vault_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('keyVaultPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "logic_app_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('azureWebsitesPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "container_registry_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('containerRegistryPrivateDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ml_workspace_api_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('mlWorkspaceprivateDnsZoneName1')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ml_workspace_notebook_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('mlWorkspaceprivateDnsZoneName2')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('searchDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "api_management_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('apiManagementDnsZoneName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6772391741160736336"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'subnetDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dns-deployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DeployDataLake": {
            "value": "[parameters('DeployDataLake')]"
          },
          "DeployLandingStorage": {
            "value": "[parameters('DeployLandingStorage')]"
          },
          "DeployKeyVault": {
            "value": "[parameters('DeployKeyVault')]"
          },
          "DeployMLWorkspace": {
            "value": "[parameters('DeployMLWorkspace')]"
          },
          "DeployCognitiveService": {
            "value": "[parameters('DeployCognitiveService')]"
          },
          "DeployAzureSearch": {
            "value": "[parameters('DeployAzureSearch')]"
          },
          "DeployAPIManagement": {
            "value": "[parameters('DeployAPIManagement')]"
          },
          "DeployAzureOpenAI": {
            "value": "[parameters('DeployAzureOpenAI')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "6757447330287039258"
            }
          },
          "parameters": {
            "DeployDataLake": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployLandingStorage": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployKeyVault": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeploySynapse": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeployPurview": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeployLogicApp": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployMLWorkspace": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployCognitiveService": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployEventHubNamespace": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeploySynapseWebPrivateEndpoint": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeployPurviewPrivateEndpoints": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeployDatabricks": {
              "type": "string",
              "defaultValue": "False"
            },
            "DeployAzureSearch": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployAPIManagement": {
              "type": "string",
              "defaultValue": "True"
            },
            "DeployAzureOpenAI": {
              "type": "string",
              "defaultValue": "True"
            },
            "rgname": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "SUBSCRIPTION_ID": {
              "type": "string"
            }
          },
          "variables": {
            "blobprivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
            "dfsprivateDnsZoneName": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
            "fileprivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
            "queueprivateDnsZoneName": "[format('privatelink.queue.{0}', environment().suffixes.storage)]",
            "tableprivateDnsZoneName": "[format('privatelink.table.{0}', environment().suffixes.storage)]",
            "cognitiveServicePrivateDnsZoneName": "privatelink.cognitiveservices.azure.com",
            "openAIPrivateDnsZoneName": "privatelink.openai.azure.com",
            "eventhubPrivateDnsZone": "privatelink.servicebus.windows.net",
            "keyVaultPrivateDnsZoneName": "privatelink.vaultcore.azure.net",
            "purviewPortalprivateDnsZoneName": "privatelink.purviewstudio.azure.com",
            "purviewAccountprivateDnsZoneName": "privatelink.purview.azure.com",
            "synapseDevprivateDnsZoneName": "privatelink.dev.azuresynapse.net",
            "synapsePrivatelinkhubprivateDnsZoneName": "privatelink.azuresynapse.net",
            "containerRegistryPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
            "mlWorkspaceprivateDnsZoneName1": "privatelink.api.azureml.ms",
            "mlWorkspaceprivateDnsZoneName2": "privatelink.notebooks.azure.net",
            "databricksWorkspaceDnsZoneName": "privatelink.azuredatabricks.net",
            "searchDnsZoneName": "privatelink.search.windows.net",
            "apiManagementDnsZoneName": "privatelink.azure-api.net"
          },
          "resources": [
            {
              "condition": "[or(or(equals(parameters('DeployDataLake'), 'True'), equals(parameters('DeployLandingStorage'), 'True')), equals(parameters('DeployPurview'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "blob_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('blobprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[or(equals(parameters('DeployDataLake'), 'True'), equals(parameters('DeployLandingStorage'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dfs_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('dfsprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[or(or(equals(parameters('DeployMLWorkspace'), 'True'), equals(parameters('DeployLandingStorage'), 'True')), equals(parameters('DeployLogicApp'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "file_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('fileprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[or(or(or(equals(parameters('DeployMLWorkspace'), 'True'), equals(parameters('DeployLandingStorage'), 'True')), equals(parameters('DeployLogicApp'), 'True')), equals(parameters('DeployPurview'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "queue_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('queueprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[or(or(equals(parameters('DeployDataLake'), 'True'), equals(parameters('DeployLandingStorage'), 'True')), equals(parameters('DeployLogicApp'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "table_private_endpoint",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('tableprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployCognitiveService'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cognitive_service_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('cognitiveServicePrivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployAzureOpenAI'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai_service_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('openAIPrivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[or(equals(parameters('DeployEventHubNamespace'), 'True'), equals(parameters('DeployPurview'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "event_hub_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('eventhubPrivateDnsZone')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployKeyVault'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "key_vault_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('keyVaultPrivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[and(equals(parameters('DeployPurview'), 'True'), equals(parameters('DeployPurviewPrivateEndpoints'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "purview_portal_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('purviewPortalprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[and(equals(parameters('DeployPurview'), 'True'), equals(parameters('DeployPurviewPrivateEndpoints'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "purview_account_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('purviewAccountprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeploySynapse'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "synapse_dev_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('synapseDevprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[and(equals(parameters('DeploySynapse'), 'True'), equals(parameters('DeploySynapseWebPrivateEndpoint'), 'True'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "synapse_web_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('synapsePrivatelinkhubprivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployMLWorkspace'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "container_registry_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('containerRegistryPrivateDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployMLWorkspace'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ml_workspace_api_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('mlWorkspaceprivateDnsZoneName1')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployMLWorkspace'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ml_workspace_notebook_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('mlWorkspaceprivateDnsZoneName2')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployDatabricks'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "databricksWorkspace_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('databricksWorkspaceDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployAzureSearch'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('searchDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('DeployAPIManagement'), 'True')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "api_management_dns_zone",
              "subscriptionId": "[parameters('SUBSCRIPTION_ID')]",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateDnsZoneName": {
                    "value": "[variables('apiManagementDnsZoneName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3112555437865645835"
                    }
                  },
                  "parameters": {
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-{1}-link', parameters('privateDnsZoneName'), parameters('vnetName'))]",
                    "trimmedName": "[if(greater(length(variables('resourceName')), 80), substring(variables('resourceName'), 0, 80), variables('resourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('trimmedName'))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'dnsZonesModule')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountModule",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "accessTier": {
            "value": "[parameters('accessTier')]"
          },
          "requireInfrastructureEncryption": {
            "value": "[parameters('requireInfrastructureEncryption')]"
          },
          "softDeleteEnabled": {
            "value": "[parameters('softDeleteEnabled')]"
          },
          "enableDiagnostics": {
            "value": "[parameters('enableDiagnostics')]"
          },
          "DeployWithCustomNetworking": {
            "value": "[parameters('DeployWithCustomNetworking')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "allowBlobPublicAccess": {
            "value": true
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          },
          "PrivateEndpointId": {
            "value": "[parameters('PrivateEndpointId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11906425624598333140"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "DataLakeContainerNames": {
              "type": "array",
              "defaultValue": [
                "raw",
                "structured",
                "curated"
              ]
            },
            "storageAccountType": {
              "type": "string",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
              ]
            },
            "accessTier": {
              "type": "string",
              "allowedValues": [
                "Hot",
                "Cool"
              ]
            },
            "isHnsEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "requireInfrastructureEncryption": {
              "type": "bool"
            },
            "softDeleteEnabled": {
              "type": "bool"
            },
            "autoDeletePolicy": {
              "type": "bool",
              "defaultValue": false
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "enableDiagnostics": {
              "type": "bool",
              "defaultValue": true
            },
            "DeployLogAnalytics": {
              "type": "string",
              "defaultValue": "False"
            },
            "logAnalyticsSubscriptionId": {
              "type": "string",
              "defaultValue": ""
            },
            "logAnalyticsRG": {
              "type": "string",
              "defaultValue": ""
            },
            "logAnalyticsName": {
              "type": "string",
              "defaultValue": ""
            },
            "DeployWithCustomNetworking": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpoints": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpointsInSameRgAsResource": {
              "type": "string",
              "defaultValue": "False"
            },
            "UseManualPrivateLinkServiceConnections": {
              "type": "string",
              "defaultValue": "False"
            },
            "vnetName": {
              "type": "string"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "PrivateEndpointId": {
              "type": "string"
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            },
            "AllowAccessToIpRange": {
              "type": "string",
              "defaultValue": "False"
            },
            "IpRangeCidr": {
              "type": "string",
              "defaultValue": ""
            },
            "SUBSCRIPTION_ID": {
              "type": "securestring"
            },
            "rgname": {
              "type": "string"
            },
            "deployblobPE": {
              "type": "bool",
              "defaultValue": true
            },
            "deploydfsPE": {
              "type": "bool",
              "defaultValue": false
            },
            "deployfilePE": {
              "type": "bool",
              "defaultValue": true
            },
            "deployqueuePE": {
              "type": "bool",
              "defaultValue": true
            },
            "deploytablePE": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "variables": {
            "vnetIntegration": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('CreatePrivateEndpoints'), 'True')), true(), false())]",
            "privateEndpointRg": "[if(equals(parameters('CreatePrivateEndpointsInSameRgAsResource'), 'True'), resourceGroup().name, parameters('rgname'))]",
            "ipRangeFilter": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('AllowAccessToIpRange'), 'True')), true(), false())]",
            "publicNetworkAccess": "[if(or(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), variables('ipRangeFilter')), 'Enabled', 'Disabled')]",
            "defaultAction": "[if(and(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), equals(variables('ipRangeFilter'), false())), 'Allow', 'Deny')]",
            "blobprivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
            "dfsprivateDnsZoneName": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
            "fileprivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
            "queueprivateDnsZoneName": "[format('privatelink.queue.{0}', environment().suffixes.storage)]",
            "tableprivateDnsZoneName": "[format('privatelink.table.{0}', environment().suffixes.storage)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "defaultToOAuthAuthentication": true,
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "minimumTlsVersion": "TLS1_2",
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "supportsHttpsTrafficOnly": true,
                "isHnsEnabled": "[parameters('isHnsEnabled')]",
                "encryption": {
                  "requireInfrastructureEncryption": "[parameters('requireInfrastructureEncryption')]",
                  "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                  "defaultAction": "[variables('defaultAction')]",
                  "ipRules": "[if(equals(variables('ipRangeFilter'), false()), null(), createArray(createObject('action', 'Allow', 'value', parameters('IpRangeCidr'))))]"
                }
              }
            },
            {
              "condition": "[parameters('softDeleteEnabled')]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "containerDeleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "days": 7,
                  "enabled": true
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "days": 7,
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[parameters('autoDeletePolicy')]",
              "type": "Microsoft.Storage/storageAccounts/managementPolicies",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "policy": {
                  "rules": [
                    {
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterCreationGreaterThan": 30
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [
                            "blockBlob",
                            "appendBlob"
                          ]
                        }
                      },
                      "enabled": true,
                      "name": "DeleteAfter30Days",
                      "type": "Lifecycle"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(parameters('enableDiagnostics'), equals(parameters('DeployLogAnalytics'), 'True'))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', parameters('storageAccountName'), 'default')]",
              "name": "[format('{0}-blob-loganalytics', parameters('storageAccountName'))]",
              "properties": {
                "workspaceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsRG')), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "StorageRead",
                    "enabled": true
                  },
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  },
                  {
                    "category": "StorageDelete",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "copy": {
                "name": "r_storageAccountContainer",
                "count": "[length(parameters('DataLakeContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('DataLakeContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(variables('vnetIntegration'), parameters('deployblobPE'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "blob_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('blobprivateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('blobprivateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "blob"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(variables('vnetIntegration'), parameters('deploydfsPE'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dfs_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('dfsprivateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('dfsprivateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "dfs"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(variables('vnetIntegration'), parameters('deployfilePE'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "file_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('fileprivateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('fileprivateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "file"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(variables('vnetIntegration'), parameters('deployqueuePE'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "queue_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('queueprivateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('queueprivateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "queue"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(variables('vnetIntegration'), parameters('deploytablePE'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "table_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('tableprivateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('tableprivateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "table"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'dns-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageContainerDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "containerName": {
            "value": "[parameters('containerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14394800351979306196"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('containerName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageAccountModule')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai_search_deployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "aisearchname": {
            "value": "[parameters('aisearchname')]"
          },
          "aisearchlocation": {
            "value": "[parameters('aisearchlocation')]"
          },
          "sku_name": {
            "value": "[parameters('sku_name')]"
          },
          "disableLocalAuth": {
            "value": "[parameters('disableLocalAuth')]"
          },
          "partitionCount": {
            "value": "[parameters('partitionCount')]"
          },
          "replicaCount": {
            "value": "[parameters('replicaCount')]"
          },
          "hostingMode": {
            "value": "[parameters('hostingMode')]"
          },
          "semanticSearch": {
            "value": "[parameters('semanticSearch')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "PrivateEndpointId": {
            "value": "[parameters('PrivateEndpointId')]"
          },
          "DeployResourcesWithPublicAccess": {
            "value": "[parameters('DeployResourcesWithPublicAccess')]"
          },
          "DeployWithCustomNetworking": {
            "value": "[parameters('DeployWithCustomNetworking')]"
          },
          "CreatePrivateEndpoints": {
            "value": "[parameters('CreatePrivateEndpoints')]"
          },
          "CreatePrivateEndpointsInSameRgAsResource": {
            "value": "[parameters('CreatePrivateEndpointsInSameRgAsResource')]"
          },
          "UseManualPrivateLinkServiceConnections": {
            "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1880454893331901412"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "aisearchname": {
              "type": "string"
            },
            "aisearchlocation": {
              "type": "string"
            },
            "sku_name": {
              "type": "string",
              "allowedValues": [
                "basic",
                "free",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
              ]
            },
            "disableLocalAuth": {
              "type": "bool"
            },
            "partitionCount": {
              "type": "int"
            },
            "replicaCount": {
              "type": "int"
            },
            "hostingMode": {
              "type": "string"
            },
            "semanticSearch": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "disabled",
                "free",
                "standard"
              ]
            },
            "DeployWithCustomNetworking": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpoints": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpointsInSameRgAsResource": {
              "type": "string",
              "defaultValue": "False"
            },
            "UseManualPrivateLinkServiceConnections": {
              "type": "string",
              "defaultValue": "False"
            },
            "vnetName": {
              "type": "string"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "PrivateEndpointId": {
              "type": "string"
            },
            "SUBSCRIPTION_ID": {
              "type": "securestring"
            },
            "rgname": {
              "type": "string"
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            },
            "AllowAccessToIpRange": {
              "type": "string",
              "defaultValue": "False"
            },
            "IpRangeCidr": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "vnetIntegration": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('CreatePrivateEndpoints'), 'True')), true(), false())]",
            "privateEndpointRg": "[if(equals(parameters('CreatePrivateEndpointsInSameRgAsResource'), 'True'), resourceGroup().name, parameters('rgname'))]",
            "privateDnsZoneName": "privatelink.search.windows.net",
            "ipRangeFilter": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('AllowAccessToIpRange'), 'True')), true(), false())]",
            "publicNetworkAccess": "[if(or(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), variables('ipRangeFilter')), 'enabled', 'disabled')]",
            "defaultAction": "[if(and(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), equals(variables('ipRangeFilter'), false())), 'Allow', 'Deny')]",
            "networkRuleSet": {
              "defaultAction": "[variables('defaultAction')]",
              "ipRules": "[if(equals(variables('ipRangeFilter'), false()), null(), createArray(createObject('action', 'Allow', 'value', parameters('IpRangeCidr'))))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('aisearchname')]",
              "location": "[parameters('aisearchlocation')]",
              "sku": {
                "name": "[parameters('sku_name')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hostingMode": "[parameters('hostingMode')]",
                "semanticSearch": "[parameters('semanticSearch')]",
                "networkRuleSet": "[if(equals(parameters('sku_name'), 'basic'), null(), variables('networkRuleSet'))]",
                "partitionCount": "[parameters('partitionCount')]",
                "replicaCount": "[parameters('replicaCount')]",
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "disableLocalAuth": "[parameters('disableLocalAuth')]",
                "authOptions": null
              }
            },
            {
              "condition": "[variables('vnetIntegration')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ai_search_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('privateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('privateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('aisearchname')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Search/searchServices', parameters('aisearchname'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "searchService"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('aisearchname'))]"
              ]
            }
          ],
          "outputs": {
            "aiSearchIdentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Search/searchServices', parameters('aisearchname')), '2023-11-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageContainerDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServicePlanDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appserviceplan_sku": {
            "value": "[parameters('appserviceplan_sku')]"
          },
          "appserviceplan_skuCode": {
            "value": "[parameters('appserviceplan_skuCode')]"
          },
          "reserved": {
            "value": "[parameters('reserved')]"
          },
          "maximumElasticWorkerCount": {
            "value": "[parameters('maximumElasticWorkerCount')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "763078210483509521"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "appserviceplan_sku": {
              "type": "string"
            },
            "appserviceplan_skuCode": {
              "type": "string"
            },
            "reserved": {
              "type": "bool"
            },
            "maximumElasticWorkerCount": {
              "type": "int"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "elastic",
              "sku": {
                "tier": "[parameters('appserviceplan_sku')]",
                "name": "[parameters('appserviceplan_skuCode')]"
              },
              "properties": {
                "reserved": "[parameters('reserved')]",
                "maximumElasticWorkerCount": "[parameters('maximumElasticWorkerCount')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageContainerDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployFunctionApp",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "functionWorkerRuntime": {
            "value": "[parameters('functionWorkerRuntime')]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "hostingPlanName": {
            "value": "[parameters('hostingPlanName')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "functionApplinuxFxVersion": {
            "value": "[parameters('functionApplinuxFxVersion')]"
          },
          "VnetForResourcesRgName": {
            "value": "[parameters('rgname')]"
          },
          "FunctionAppSubnetName": {
            "value": "[parameters('FunctionAppSubnetName')]"
          },
          "UseManualPrivateLinkServiceConnections": {
            "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "PrivateEndpointId": {
            "value": "[parameters('PrivateEndpointId')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "9724209805680058263"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "functionWorkerRuntime": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "hostingPlanName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "functionApplinuxFxVersion": {
              "type": "string",
              "defaultValue": "python|3.11"
            },
            "VnetForResourcesRgName": {
              "type": "string"
            },
            "FunctionAppSubnetName": {
              "type": "string"
            },
            "UseManualPrivateLinkServiceConnections": {
              "type": "string",
              "defaultValue": "False"
            },
            "rgname": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "PrivateEndpointId": {
              "type": "string"
            },
            "SUBSCRIPTION_ID": {
              "type": "string"
            }
          },
          "variables": {
            "functionContentShareName": "[toLower(parameters('functionAppName'))]",
            "privateDnsZoneName": "privatelink.azurewebsites.net"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), variables('functionContentShareName'))]"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[variables('functionContentShareName')]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "[parameters('functionWorkerRuntime')]"
                    },
                    {
                      "name": "WEBSITE_VNET_ROUTE_ALL",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_CONTENTOVERVNET",
                      "value": "1"
                    }
                  ],
                  "minTlsVersion": "1.2",
                  "linuxFxVersion": "[parameters('functionApplinuxFxVersion')]",
                  "numberOfWorkers": 1,
                  "acrUseManagedIdentityCreds": true
                },
                "httpsOnly": true,
                "publicNetworkAccess": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', parameters('storageAccountName'), variables('functionContentShareName')), '/')[0], split(format('{0}/default/{1}', parameters('storageAccountName'), variables('functionContentShareName')), '/')[1], split(format('{0}/default/{1}', parameters('storageAccountName'), variables('functionContentShareName')), '/')[2])]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[resourceId(parameters('VnetForResourcesRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('FunctionAppSubnetName'))]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "functionapp_private_endpoint",
              "resourceGroup": "[parameters('rgname')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('privateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('privateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('functionAppName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "sites"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            }
          ],
          "outputs": {
            "fapidentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'appServicePlanDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageContainerDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cognitiveServiceDeployment",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cognitiveServiceName": {
            "value": "[parameters('aiservicename')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "openAILocation": {
            "value": "[parameters('location')]"
          },
          "disableLocalAuth": {
            "value": "[parameters('disableLocalAuth')]"
          },
          "DeployResourcesWithPublicAccess": {
            "value": "[parameters('DeployResourcesWithPublicAccess')]"
          },
          "DeployWithCustomNetworking": {
            "value": "[parameters('DeployWithCustomNetworking')]"
          },
          "CreatePrivateEndpoints": {
            "value": "[parameters('CreatePrivateEndpoints')]"
          },
          "CreatePrivateEndpointsInSameRgAsResource": {
            "value": "[parameters('CreatePrivateEndpointsInSameRgAsResource')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "PrivateEndpointSubnetName": {
            "value": "[parameters('PrivateEndpointSubnetName')]"
          },
          "PrivateEndpointId": {
            "value": "[parameters('PrivateEndpointId')]"
          },
          "SUBSCRIPTION_ID": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "rgname": {
            "value": "[parameters('rgname')]"
          },
          "deployments": {
            "value": "[parameters('deployments')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "407440420715708281"
            }
          },
          "parameters": {
            "cognitiveServiceName": {
              "type": "string",
              "metadata": {
                "description": "That name is the name of our application."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for non Azure Open AI resources."
              }
            },
            "openAILocation": {
              "type": "string",
              "metadata": {
                "description": "Location for Azure Open AI."
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "sku": {
              "type": "string",
              "defaultValue": "S0",
              "allowedValues": [
                "S0"
              ]
            },
            "disableLocalAuth": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Disable use of API Keys and only allow AAD Auth"
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            },
            "AllowAccessToIpRange": {
              "type": "string",
              "defaultValue": "False"
            },
            "IpRangeCidr": {
              "type": "string",
              "defaultValue": ""
            },
            "DeployWithCustomNetworking": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpoints": {
              "type": "string",
              "defaultValue": "True"
            },
            "CreatePrivateEndpointsInSameRgAsResource": {
              "type": "string",
              "defaultValue": "False"
            },
            "UseManualPrivateLinkServiceConnections": {
              "type": "string",
              "defaultValue": "False"
            },
            "vnetName": {
              "type": "string"
            },
            "PrivateEndpointSubnetName": {
              "type": "string"
            },
            "PrivateEndpointId": {
              "type": "string"
            },
            "SUBSCRIPTION_ID": {
              "type": "securestring"
            },
            "rgname": {
              "type": "string"
            }
          },
          "variables": {
            "ipRangeFilter": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('AllowAccessToIpRange'), 'True')), true(), false())]",
            "publicNetworkAccess": "[if(or(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), variables('ipRangeFilter')), 'Enabled', 'Disabled')]",
            "defaultAction": "[if(and(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), equals(variables('ipRangeFilter'), false())), 'Allow', 'Deny')]",
            "vnetIntegration": "[if(and(equals(parameters('DeployWithCustomNetworking'), 'True'), equals(parameters('CreatePrivateEndpoints'), 'True')), true(), false())]",
            "privateEndpointRg": "[if(equals(parameters('CreatePrivateEndpointsInSameRgAsResource'), 'True'), resourceGroup().name, parameters('rgname'))]",
            "privateDnsZoneName": "[if(equals(parameters('kind'), 'OpenAI'), 'privatelink.openai.azure.com', 'privatelink.cognitiveservices.azure.com')]"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2022-10-01",
              "name": "[parameters('cognitiveServiceName')]",
              "location": "[parameters('openAILocation')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "[parameters('kind')]",
              "properties": {
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "disableLocalAuth": "[parameters('disableLocalAuth')]",
                "customSubDomainName": "[parameters('cognitiveServiceName')]",
                "apiProperties": {
                  "statisticsEnabled": false
                },
                "networkAcls": {
                  "defaultAction": "[variables('defaultAction')]",
                  "ipRules": "[if(equals(variables('ipRangeFilter'), false()), null(), createArray(createObject('value', parameters('IpRangeCidr'))))]"
                }
              }
            },
            {
              "copy": {
                "name": "r_deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('cognitiveServiceName'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName'))]"
              ]
            },
            {
              "condition": "[variables('vnetIntegration')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cognitiveService_private_endpoint",
              "resourceGroup": "[variables('privateEndpointRg')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "PrivateEndpointSubnetName": {
                    "value": "[parameters('PrivateEndpointSubnetName')]"
                  },
                  "UseManualPrivateLinkServiceConnections": {
                    "value": "[parameters('UseManualPrivateLinkServiceConnections')]"
                  },
                  "SUBSCRIPTION_ID": {
                    "value": "[parameters('SUBSCRIPTION_ID')]"
                  },
                  "rgname": {
                    "value": "[parameters('rgname')]"
                  },
                  "privateDnsZoneName": {
                    "value": "[variables('privateDnsZoneName')]"
                  },
                  "privateDnsZoneConfigsName": {
                    "value": "[replace(variables('privateDnsZoneName'), '.', '-')]"
                  },
                  "resourceName": {
                    "value": "[parameters('cognitiveServiceName')]"
                  },
                  "resourceID": {
                    "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName'))]"
                  },
                  "privateEndpointgroupIds": {
                    "value": [
                      "account"
                    ]
                  },
                  "PrivateEndpointId": {
                    "value": "[parameters('PrivateEndpointId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7124209545389876970"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "VnetforPrivateEndpointsSubscriptionId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "PrivateEndpointSubnetName": {
                      "type": "string"
                    },
                    "UseManualPrivateLinkServiceConnections": {
                      "type": "string",
                      "defaultValue": "False"
                    },
                    "SUBSCRIPTION_ID": {
                      "type": "string"
                    },
                    "rgname": {
                      "type": "string"
                    },
                    "privateDnsZoneName": {
                      "type": "string"
                    },
                    "privateDnsZoneConfigsName": {
                      "type": "string"
                    },
                    "resourceName": {
                      "type": "string"
                    },
                    "resourceID": {
                      "type": "string"
                    },
                    "privateEndpointgroupIds": {
                      "type": "array"
                    },
                    "PrivateEndpointId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "peName": "[format('pep-{0}-{1}-{2}-{3}', parameters('PrivateEndpointId'), parameters('location'), parameters('resourceName'), first(parameters('privateEndpointgroupIds')))]",
                    "privateLinkServiceConnections": [
                      {
                        "name": "[variables('peName')]",
                        "properties": {
                          "privateLinkServiceId": "[parameters('resourceID')]",
                          "groupIds": "[parameters('privateEndpointgroupIds')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('peName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('VnetforPrivateEndpointsSubscriptionId'), parameters('rgname')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('PrivateEndpointSubnetName'))]"
                        },
                        "customNetworkInterfaceName": "[format('{0}-nic', variables('peName'))]",
                        "privateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'True'), null(), variables('privateLinkServiceConnections'))]",
                        "manualPrivateLinkServiceConnections": "[if(equals(parameters('UseManualPrivateLinkServiceConnections'), 'False'), null(), variables('privateLinkServiceConnections'))]"
                      },
                      "tags": {}
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', variables('peName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDnsZoneConfigsName')]",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SUBSCRIPTION_ID'), parameters('rgname')), 'Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('peName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "openaiIdentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName')), '2022-10-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'ai_search_deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageContainerDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployAppInsights",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          },
          "DeployLogAnalytics": {
            "value": "[parameters('DeployLogAnalytics')]"
          },
          "logAnalyticsSubscriptionId": {
            "value": "[parameters('SUBSCRIPTION_ID')]"
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "logAnalyticsRG": {
            "value": "[parameters('rgname')]"
          },
          "publicNetworkAccessForIngestion": {
            "value": "[parameters('publicNetworkAccessForIngestion')]"
          },
          "publicNetworkAccessForQuery": {
            "value": "[parameters('publicNetworkAccessForQuery')]"
          },
          "RetentionInDays": {
            "value": "[parameters('retentionInDays')]"
          },
          "DeployResourcesWithPublicAccess": {
            "value": "[parameters('DeployResourcesWithPublicAccess')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3392121095958243546"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "appInsightsName": {
              "type": "string"
            },
            "DeployLogAnalytics": {
              "type": "string"
            },
            "logAnalyticsSubscriptionId": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "logAnalyticsRG": {
              "type": "string"
            },
            "publicNetworkAccessForIngestion": {
              "type": "string"
            },
            "publicNetworkAccessForQuery": {
              "type": "string"
            },
            "RetentionInDays": {
              "type": "int"
            },
            "DeployResourcesWithPublicAccess": {
              "type": "string",
              "defaultValue": "True",
              "metadata": {
                "description": "Public Networking Access"
              }
            }
          },
          "variables": {
            "publicNetworkAccessForIngestion_variable": "[if(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), 'Enabled', parameters('publicNetworkAccessForIngestion'))]",
            "publicNetworkAccessForQuery_variable": "[if(equals(parameters('DeployResourcesWithPublicAccess'), 'True'), 'Enabled', parameters('publicNetworkAccessForQuery'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "RetentionInDays": "[parameters('RetentionInDays')]",
                "WorkspaceResourceId": "[if(equals(parameters('DeployLogAnalytics'), 'True'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsRG')), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), null())]",
                "IngestionMode": "[if(equals(parameters('DeployLogAnalytics'), 'True'), 'LogAnalytics', 'ApplicationInsights')]",
                "publicNetworkAccessForIngestion": "[variables('publicNetworkAccessForIngestion_variable')]",
                "publicNetworkAccessForQuery": "[variables('publicNetworkAccessForQuery_variable')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'subnetDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "roleforaisearch",
      "resourceGroup": "[parameters('rgname')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiSearchprincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'ai_search_deployment'), '2022-09-01').outputs.aiSearchIdentity.value]"
          },
          "storageAccountname": {
            "value": "[parameters('storageAccountName')]"
          },
          "cognitiveServiceName": {
            "value": "[parameters('aiservicename')]"
          },
          "openaiprincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'cognitiveServiceDeployment'), '2022-09-01').outputs.openaiIdentity.value]"
          },
          "aisearchname": {
            "value": "[parameters('aisearchname')]"
          },
          "fapprincipalID": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'deployFunctionApp'), '2022-09-01').outputs.fapidentity.value]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "10035841937924858908"
            }
          },
          "parameters": {
            "storageAccountname": {
              "type": "string"
            },
            "aiSearchprincipalId": {
              "type": "string"
            },
            "cognitiveServiceName": {
              "type": "string"
            },
            "openaiprincipalId": {
              "type": "string"
            },
            "aisearchname": {
              "type": "string"
            },
            "fapprincipalID": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountname'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountname')), parameters('aiSearchprincipalId'), 'Storage Blob Data Contributor')]",
              "properties": {
                "principalId": "[parameters('aiSearchprincipalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('functionAppName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountname')), parameters('fapprincipalID'), 'Storage Blob Data Contributor')]",
              "properties": {
                "principalId": "[parameters('fapprincipalID')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('cognitiveServiceName'))]",
              "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName')), parameters('aiSearchprincipalId'), 'Cognitive Services OpenAI Contributor role')]",
              "properties": {
                "principalId": "[parameters('aiSearchprincipalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a001fd3d-188f-4b5d-821b-7da978bf7442')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('aisearchname'))]",
              "name": "[guid(resourceId('Microsoft.Search/searchServices', parameters('aisearchname')), parameters('openaiprincipalId'), 'Search Index Data Reader')]",
              "properties": {
                "principalId": "[parameters('openaiprincipalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1407120a-92aa-4202-b7e9-c0e197c71c8f')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'cognitiveServiceDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'deployFunctionApp')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'ai_search_deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'storageContainerDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'subnetDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgname')), 'Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    }
  ]
}
